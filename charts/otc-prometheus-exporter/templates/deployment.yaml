apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecrets }}
      {{ end }}
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.imageRepository}}/{{ .Values.image.imageName }}:{{ .Values.image.imageTag }}"
          imagePullPolicy: "{{ .Values.image.imagePullPolicy | default "IfNotPresent" }}"
          ports:
            - containerPort: {{ .Values.metricsPort | default 39100}}
          env:
            - name: LOGGING
              value: "{{ .Values.env.logging | default "INFO"}}"
            - name: PORT
              value: "{{ .Values.env.metricsPort  | default 39100}}"
            - name: WAITDURATION
              value: "{{ .Values.env.waitDuration | default 60}}"
            - name: NAMESPACES
              value: "{{ .Values.env.namespaces }}"
            - name:  FETCH_RESOURCE_ID_TO_NAME
              value: "{{ .Values.env.fetchResourceIdToName | default false}}"
            {{- if .Values.osUsername }}
            - name: OS_USERNAME
              value: "{{ .Values.env.osUsername }}"
            {{ end }}
            {{- if .Values.osPassword }}
            - name: OS_PASSWORD
              value: "{{ .Values.env.osPassword }}" 
            {{ end }}
            {{- if .Values.osAccessKey }}
            - name: OS_ACCESS_KEY
              value: "{{ .Values.env.osAccessKey }}" 
            {{ end }}
            {{- if .Values.osSecretKey }}
            - name: OS_SECRET_KEY
              value: "{{ .Values.env.osSecretKey }}"
            {{ end }}
            {{- if .Values.osProjectId }}
            - name: OS_PROJECT_ID
              value: "{{ .Values.env.osProjectId }}"
            {{ end }}
            {{- if .Values.osDomainName }}
            - name: OS_DOMAIN_NAME
              value: "{{ .Values.env.osDomainName }}"
            {{ end }}
          {{- if .Values.extraEnvFrom }}
          envFrom:
            {{- if .Values.extraEnvFrom.secretRef }}
            secretRef:
              name: {{ .Values.extraEnvFrom.secretRef.name }}
            {{ end }}
          {{ end }}
